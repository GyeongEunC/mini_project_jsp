package com.jsp.db;

import java.sql.*;

import util.DBManager;

public class PeopleDAO {
	private PeopleDAO() {
	}

	private static PeopleDAO instance = new PeopleDAO();

	public static PeopleDAO getInstance() {
		return instance;
	}

	public int userCheck(String id, String pwd, String lev) {
		int result = 1;
		Connection conn = null;
		String sql = "select * from people where id = ?";
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		try {
			conn = DBManager.getConnection();
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, id);
			rs = pstmt.executeQuery();
			if (rs.next()) {
				if (pwd.equals(rs.getString("PASS"))) { // 조건 : 비밀번호 일치
					if (lev.equals(rs.getString("LEV"))) {// 조건 : 회원등급 일치
						result = 2; // 관리자로 로그인 성공
						if (lev.equals("B")) {
							result = 3; // 일반회원으로 로그인 성공
						}
					} else { // 등급이 일치하지 않는다면
						return 1;
					}
				} else { // 비밀번호가 일치하지 않는다면
					return 0;
				}
			} else { // 아이디가 일치하지 않는다면
				result = -1;
			}
		} catch (Exception e) {
			System.out.println(e);
		} finally {
			DBManager.close(rs, pstmt, conn);
		}
		return result;
	}

	public PeopleVO getMember(String id) {
		PeopleVO member = null;
		Connection conn = null;
		String sql = "select * from people where id = ?";
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		try {
			conn = DBManager.getConnection();
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, id);
			rs = pstmt.executeQuery();
			if (rs.next()) {
				member = new PeopleVO();
				member.setId(rs.getString("ID"));
				member.setPass(rs.getString("PASS"));
				member.setName(rs.getString("NAME"));
				member.setLev(rs.getString("LEV"));
				member.setPhone(rs.getString("PHONE"));
				member.setEnter(rs.getDate("ENTER"));
				member.setGender(rs.getInt("GENDER"));
				member.setEmail(rs.getString("email"));
			}
		} catch (Exception e) {
			System.out.println(e);
		} finally {
			DBManager.close(rs, pstmt, conn);
		}
		return member;
	}

	public int updateMember(PeopleVO pVo) {
		int result = -1;
		String sql = "update people set gender=?, pass=?, name=?, lev=?, phone=?, email=? where id=?";
		Connection conn = null;
		PreparedStatement pstmt = null;
		try {
			conn = DBManager.getConnection();
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, pVo.getGender());
			pstmt.setString(2, pVo.getPass());
			pstmt.setString(3, pVo.getName());
			pstmt.setString(4, pVo.getLev());
			pstmt.setString(5, pVo.getPhone());
			pstmt.setString(6, pVo.getEmail());
			pstmt.setString(7, pVo.getId());
			result = pstmt.executeUpdate();
		} catch (Exception e) {
			System.out.println(e);
		} finally {
			DBManager.close(pstmt, conn);
		}
		return result;
	}

	public void insertMember(PeopleVO member) {
		String sql = "insert into people values(?, ?, ?, ?, SYSDATE, ?, ?, ?)";
		Connection conn = null;
		PreparedStatement pstmt = null;
		try {
			conn = DBManager.getConnection();
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, member.getId());
			pstmt.setString(2, member.getPass());
			pstmt.setString(3, member.getName());
			pstmt.setString(4, member.getLev());
			pstmt.setInt(5, member.getGender());
			pstmt.setString(6, member.getPhone());
			pstmt.setString(7, member.getEmail());
			pstmt.executeUpdate();
		} catch (Exception e) {
			System.out.println(e);
		} finally {
			DBManager.close(pstmt, conn);
		}
	}

	public void deleteMember(String id) {
		String sql = "delete people where id = ?";
		Connection conn = null;
		PreparedStatement pstmt = null;
		try {
			conn = DBManager.getConnection();
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, id);
			pstmt.executeUpdate();
		} catch (Exception e) {
			System.out.println(e);
		} finally {
			DBManager.close(pstmt, conn);
		}
	}
}
