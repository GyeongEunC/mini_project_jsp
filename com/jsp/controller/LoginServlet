package com.jsp.controller;

import java.io.IOException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.jsp.db.PeopleDAO;
import com.jsp.db.PeopleVO;


/**
 * Servlet implementation class LoginServlet
 */
@WebServlet("/login.do")
public class LoginServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		RequestDispatcher dispatcher = request.getRequestDispatcher("lndex.jsp");
		dispatcher.forward(request, response);
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("UTF-8");
		String id = request.getParameter("id");
		String pwd = request.getParameter("pwd");
		String lev = request.getParameter("lev");
		String url = null;
		
		PeopleDAO pDao = PeopleDAO.getInstance();
		
		int result = pDao.userCheck(id, pwd, lev);
		if(result == 2 || result == 3) {
			PeopleVO pVo = new PeopleVO();
			pVo = pDao.getMember(id);
			HttpSession session = request.getSession();
			session.setAttribute("loginUser", pVo);
			session.setAttribute("result", result);
			url = "people/mainPage.jsp";
		} else {
			url = "index.jsp";
			if(result == 1) {
				request.setAttribute("message", "등급 불일치로 접근이 불가합니다.");
			} else if(result == 0) {
				request.setAttribute("message", "비밀번호 불일치로 접근이 불가합니다.");
			} else {
				request.setAttribute("message", "회원 정보를 찾을 수 없습니다.");
			}
		}
		RequestDispatcher dispatcher = request.getRequestDispatcher(url);
		dispatcher.forward(request, response);
	}

}
